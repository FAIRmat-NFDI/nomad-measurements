[build-system]
requires = [
    "setuptools>=61.0.0",
    "setuptools-scm>=8.0",
]
build-backend = "setuptools.build_meta"

[project]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
]
name = "nomad-measurements"
dynamic = ["version"]
description = "A plugin for NOMAD containing base sections for measurements."
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Andrea Albino" },
    { name = "Sebastian Brückner" },
    { name = "Sarthak Kapoor" },
    { name = "José A. Márquez" },
    { name = "Rubel Mozumder" },
    { name = "Hampus Näsström" },
    { email = "fairmat@physik.hu-berlin.de" },
]
maintainers = [
    { name = "FAIRmat", email = "fairmat@physik.hu-berlin.de" },
]
license = { file = "LICENSE" }
dependencies = [
    "nomad-lab>=1.3.16",
    "pynxtools>=0.10.0",
    "fairmat-readers-xrd>=0.0.7",
    "fairmat-readers-transmission>=0.0.2",
]
[project.urls]
"Homepage" = "https://github.com/FAIRmat-NFDI/nomad-measurements"
"Bug Tracker" = "https://github.com/FAIRmat-NFDI/nomad-measurements/issues"

[tool.uv]
index-url = "https://gitlab.mpcdf.mpg.de/api/v4/projects/2187/packages/pypi/simple"

[project.optional-dependencies]
dev = [
    "pytest",
    "ruff",
    "structlog",
    "python-logstash>=0.4.6",
]

[tool.ruff]
include = ["src/*.py", "tests/*.py"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # isort
    "I",
    # pylint
    "PL",
]

ignore = [
    "F403", # 'from module import *' used; unable to detect undefined names
    "PLC0415", # `import` should be at the top-level of a file
]

fixable = ["ALL"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# this is entirely optional, you can remove this if you wish to
[tool.ruff.format]
# use single quotes for strings.
quote-style = "single"

# indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[project.entry-points.'nomad.plugin']

general_schema = "nomad_measurements:schema_entry_point"
xrd_schema = "nomad_measurements.xrd:schema_entry_point"
xrd_parser = "nomad_measurements.xrd:parser_entry_point"
qd_eto_schema = "nomad_measurements.quantumdesign:eto_schema"
qd_act_schema = "nomad_measurements.quantumdesign:act_schema"
qd_acms_schema = "nomad_measurements.quantumdesign:acms_schema"
qd_mpms_schema = "nomad_measurements.quantumdesign:mpms_schema"
qd_resisitivity_schema = "nomad_measurements.quantumdesign:resistivity_schema"
qd_eto_parser = "nomad_measurements.quantumdesign:eto_parser"
qd_act_parser = "nomad_measurements.quantumdesign:act_parser"
qd_acms_parser = "nomad_measurements.quantumdesign:acms_parser"
qd_mpms_parser = "nomad_measurements.quantumdesign:mpms_parser"
qd_resistivity_parser = "nomad_measurements.quantumdesign:resistivity_parser"
qd_sequence_parser = "nomad_measurements.quantumdesign:sequence_parser"
transmission_schema = "nomad_measurements.transmission:schema_entry_point"
transmission_parser = "nomad_measurements.transmission:parser_entry_point"

[tool.setuptools_scm]